<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--window control button style-->
    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="45" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="FontFamily" Value="{StaticResource LightIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush2}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True" Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                
                        <!--content-->
                        <ContentPresenter x:Name="ControlContent" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--maximize button style-->
    <Style x:Key="WindowMaximizeButtonControl" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True" Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--content-->
                        <ContentPresenter x:Name="ControlContent" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5, 0.5">

                            <!--rotates content of this button by 180deg-->
                            <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="180" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMaximized, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Content" Value="{StaticResource WindowRestoreIcon}" TargetName="ControlContent" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--menu button style-->
    <Style x:Key="AppMenuButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="100" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush1}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}" >

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter Content="{TemplateBinding Content}" 
                                              VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" TargetName="MouseOverBackground" />
                            <Setter Property="Opacity" Value="0.1" TargetName="MouseOverBackground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <!--current shift profile button-->
    <Style x:Key="CurrentShiftStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush2}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True" Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--content-->
                        <ContentPresenter x:Name="ControlContent" Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- notification button -->
    <Style x:Key="NotificationButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource Large}" />
        <Setter Property="FontFamily" Value="{StaticResource SharpLightIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush1}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}" >

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter Content="{TemplateBinding Content}" 
                                              VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" TargetName="MouseOverBackground" />
                            <Setter Property="Opacity" Value="0.1" TargetName="MouseOverBackground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>