<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  window control button style  -->
    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="45" />
        <Setter Property="FontSize" Value="{StaticResource XSmall}" />
        <Setter Property="FontFamily" Value="{StaticResource LightIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush6}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  maximize button style  -->
    <Style x:Key="WindowMaximizeButtonControl"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource WindowControlButtonStyle}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          RenderTransformOrigin="0.5, 0.5">

                            <!--  rotates content of this button by 180deg  -->
                            <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="180" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsMaximized, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="ControlContent" Property="Content" Value="{StaticResource WindowRestoreIcon}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  app button style  -->
    <Style x:Key="AppButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="100" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBackground" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColorBrush1}" />
                            <Setter TargetName="MouseOverBackground" Property="Opacity" Value="0.1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--  app hoverless button style  -->
    <Style x:Key="AppHoverlessButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource AppButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  current shift profile button  -->
    <Style x:Key="CurrentShiftStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush3}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource Small}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border UseLayoutRounding="True"
                            Background="{TemplateBinding Background}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="20"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--  content  -->
                        <ContentPresenter x:Name="ControlContent"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  notification button  -->
    <Style x:Key="NotificationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularIcon}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" Background="{TemplateBinding Background}">

                        <Grid Name="MouseOverBackground" Background="Transparent" />

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBackground" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColorBrush1}" />
                            <Setter TargetName="MouseOverBackground" Property="Opacity" Value="0.1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>