name: "Cutter Management System"

on:
    push:
        tags:
          - "v*"

permissions:
    contents: write

env:
    RELEASE_VERSION: ${{ github.ref_name }}

jobs:
    deploy:
        runs-on: windows-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Dotnet setup
              uses: actions/setup-dotnet@v3
              with:
                    dotnet-version: '8.0.x'
        
            - name: Restoring dependencies
              # run: dotnet restore CutterManagementSystem.sln
              run: dotnet restore CutterManagement.UI.Desktop/CutterManagement.UI.Desktop.csproj -r win-x64

            - name: Building solution
              run: dotnet build CutterManagementSystem.sln -c Release --no-restore

            - name: Publishing application
              # run: dotnet publish CutterManagementSystem/CutterManagementSystem.csproj --c Release --self-contained -r win-x64 -p:PublishSingleFile=true --no-build -o ./publish
              run: dotnet publish CutterManagement.UI.Desktop/CutterManagement.UI.Desktop.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --no-build -o ./publish

            - name: Zipping the published folder (using powershell)
              shell: pwsh
              # run: Compress-Archive -path "CutterManagement.UI.Desktop/bin/Release/net8.0-windows/win-x64/publish" -DestinationPath "CutterManagementSystem.zip"
              # run: | 
              #   if (Test-Path "publish") 
              #   { Compress-Archive -Path "publish" -DestinationPath "CutterManagementSystem.zip" } 
              #   else { Write-Error "Publish folder not found. Did dotnet publish fail?" }
              run: |
                $exe = Get-ChildItem -Path publish -Filter *.exe | Select-Object -First 1
                if ($exe)
                  {
                    $zipName = "CutterManagementSystem-$env:RELEASE_VERSION.zip"
                    Compress-Archive -Path "publish" -DestinationPath $zipName 
                  } 
                else
                 {
                    Write-Error "No .exe found in publish folder."
                  }

            - name: Uploading the zipped folder as a release
              uses: softprops/action-gh-release@v1
              with:
                files: CutterManagementSystem-{{env.RELEASE_VERSION}}.zip