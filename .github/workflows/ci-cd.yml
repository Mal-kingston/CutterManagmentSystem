name: "Continuous Integration Continuous Delivery"

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  build-deploy-CutterManagementSystem-x64:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dotnet setup
        uses: actions/setup-dotnet@v4
        with:
              dotnet-version: '8.0.x'
  
      - name: Restoring dependencies
        run: dotnet restore ./CutterManagement.UI.Desktop

      - name: Build 
        # run: dotnet build /p:Configuration=Release /p:Platform=x64 /p:GenerateAppxPackageOnBuild=true
        run: dotnet build -c release -f:net8.0-windows10.0.19041.0 
        working-directory: ./CutterManagement.UI.Desktop

      - name: Decode signing certificate
        run: | 
          echo "${{ secrets.SIGNING_CERTIFICATE_BASE_64_CONTENT }}" > cert.asc
          certutil -decode cert.asc cert.pfx

      - name: Install signing certificate
        run: certutil -user -p ${{ secrets.CERT_PASSWORD }} -silent -importpfx cert.pfx NoRoot

      - name: Publish
        run: dotnet publish -c release -f:net8.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint=${{ secrets.SIGNING_CERTIFICATE_THUMBPRINT }}
        working-directory: ./CutterManagement.UI.Desktop

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build
          path: ./CutterManagementSystem/CutterManagementSystem.Package/**/*.msix
          path: ./CutterManagementSystem/CutterManagementSystem.Package/**/*.cert
