name: "Continuous Integration Continuous Delivery"

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  build-deploy-CutterManagementSystem-x64:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Dotnet setup
        uses: actions/setup-dotnet@v3
        with:
              dotnet-version: '8.0.*'
  
      - name: Restoring dependencies
        run: dotnet restore CutterManagementSystem.sln -r win-x64

      - name: üß± Build MSIX Package
        run: msbuild ./CutterManagementSystem/CutterManagementSystem.Package.wapproj /p:Configuration=Release /p:Platform=x64 /p:GenerateAppxPackageOnBuild=true

      - name: üîê Sign MSIX with Trusted Signing
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: codesign-malachy
          certificate-profile-name: Malachy-Okwute
          files-folder: ./CutterManagementSystem/CutterManagementSystem.Package
          files-folder-filter: msix
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com

      - name: üìÅ Upload MSIX Artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-msix
          path: ../CutterManagementSystem/CutterManagementSystem.Package/*.msix