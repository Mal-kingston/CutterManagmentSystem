name: "Continuous Integration Continuous Delivery"

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  build-deploy-CutterManagementSystem-x64:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Dotnet setup
        uses: actions/setup-dotnet@v3
        with:
              dotnet-version: '8.0.*'
  
      - name: Restoring dependencies
        run: dotnet restore CutterManagementSystem.sln -r win-x64

      - name: Build MSIX Package
        run: $projectPath = "./CutterManagementSystem/CutterManagementSystem.Package.wapproj"
            & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" $projectPath /p:Configuration=Release /p:Platform=x64 /p:GenerateAppxPackageOnBuild=true


      - name: Import signing certificate
        run: |
          $securePassword = ConvertTo-SecureString "${{ secrets.CERT_PASSWORD }}" -AsPlainText -Force
          Import-PfxCertificate -FilePath "certs/Dev_Certificate.pfx" -CertStoreLocation "Cert:\CurrentUser\My" -Password $securePassword
        shell: pwsh

      - name: Sign MSIX
        run: |
          signtool sign /fd SHA256 /a /f "certs/Dev_Certificate.pfx" /p "${{ secrets.CERT_PASSWORD }}" /tr http://timestamp.digicert.com /td SHA256 "C:\Users\mal\Documents\GitHub\CutterManagementSystem\CutterManagementSystem.Package\*.msix"
        shell: pwsh

      - name: Upload MSIX artifact
        uses: actions/upload-artifact@v3
        with:
          name: CutterManagementSystem-MSIX
          path: ../CutterManagementSystem/CutterManagementSystem.Package/*.msix
