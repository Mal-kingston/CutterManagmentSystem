// <auto-generated />
using System;
using CutterManagement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CutterManagement.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241213053237_InitialDbCreation")]
    partial class InitialDbCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CutterManagement.Core.MachineDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Count")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateTime")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<int>("FrequencyCheckResult")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("MachineNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Owner")
                        .HasColumnType("int");

                    b.Property<string>("PartToothSize")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MachineSetId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MachineDataStore");
                });

            modelBuilder.Entity("CutterManagement.Core.MachineDataModel", b =>
                {
                    b.OwnsMany("CutterManagement.Core.CutterDataModel", "Cutter", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Condition")
                                .HasColumnType("int");

                            b1.Property<string>("Count")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("CutterForeignId")
                                .HasColumnType("int");

                            b1.Property<string>("CutterNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Kind")
                                .HasColumnType("int");

                            b1.Property<string>("Model")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Owner")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("CutterForeignId");

                            b1.ToTable("CutterDataModel");

                            b1.WithOwner()
                                .HasForeignKey("CutterForeignId");
                        });

                    b.OwnsMany("CutterManagement.Core.PartDataModel", "Part", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Kind")
                                .HasColumnType("int");

                            b1.Property<string>("Model")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("PartForeignId")
                                .HasColumnType("int");

                            b1.Property<string>("PartNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PartToothCount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("PartForeignId");

                            b1.ToTable("PartDataModel");

                            b1.WithOwner()
                                .HasForeignKey("PartForeignId");
                        });

                    b.Navigation("Cutter");

                    b.Navigation("Part");
                });
#pragma warning restore 612, 618
        }
    }
}
